name: Figma Plugin - Variables Sync

on:
  workflow_dispatch:
    inputs:
      data:
        description: 'Config data (JSON string of an array)'
        required: true

jobs:
  create-pr:
    runs-on: ubuntu-latest
    
    env:
      CONFIG_PATH: 'figma/figma-variables-config.json'

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config user.name "figma-variables-sync-action"
          git config user.email "figma-variables-sync-action@spaceinch.com"
          git config --get user.name
          git config --get user.email

      - name: Create branch
        id: branch
        run: |
          BRANCH_NAME=config-update-$(date +%s)
          git checkout -b $BRANCH_NAME
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "Current branch: $(git branch --show-current)"
          git status

      - name: Write config.json
        run: |
          # Extract directory path and create if it doesn't exist
          DIR_PATH=$(dirname "${{ env.CONFIG_PATH }}")
          echo "Creating directory: $DIR_PATH"
          mkdir -p "$DIR_PATH"
          
          # Write the config file
          echo '${{ github.event.inputs.data }}' | jq '.' > "${{ env.CONFIG_PATH }}"
          echo "Config file written to ${{ env.CONFIG_PATH }}"
          
          # Debug: Check if file exists and show content
          ls -la "$DIR_PATH"
          cat "${{ env.CONFIG_PATH }}"

      - name: Debug repository state
        run: |
          echo "Current branch: $(git branch --show-current)"
          git status
          git diff

      - name: Commit changes
        run: |
          # Ensure the file exists before committing
          if [ ! -f "${{ env.CONFIG_PATH }}" ]; then
            echo "ERROR: File ${{ env.CONFIG_PATH }} does not exist!"
            exit 1
          fi
          
          git add "${{ env.CONFIG_PATH }}"
          git status
          git commit -m "Add config file at ${{ env.CONFIG_PATH }}"
          echo "Current branch after commit: $(git branch --show-current)"
          git status

      - name: Push changes
        run: |
          echo "Pushing to branch ${{ steps.branch.outputs.branch_name }}"
          git push -u origin ${{ steps.branch.outputs.branch_name }}
          echo "Push completed"
          git status
          
      - name: Run the Action
        uses: devops-infra/action-pull-request@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          source_branch: ${{ steps.branch.outputs.branch_name }}
          target_branch: develop
          title: "Figma Variables Sync -> ${{ steps.branch.outputs.branch_name }}"
